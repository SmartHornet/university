//unsigned short int key[8];

    /*unsigned long l = 4050550955;

    unsigned short int low,high;

    string str;

    showBits(l,&str);
    cout << str << endl; str.clear();

    //low = l & 00000000000000001111111111111111;
    low = l & 0xFFFF;
    showBits(low,&str);
    cout << str << endl; str.clear();

    high = l >> 16;
    showBits(high,&str);
    cout << str << endl; str.clear();*/

    //unsigned short int i = 8;

    /*int Lshift = 25, keySize = 16, keyLenght = 128, numKeys = 8;
    int startBit,i,number,endBit;

    for(i = 1; i < 53; ++i)
    {
        number = i;
        startBit = ((((number - 1) >> 3) * 25 + ((number - 1) & 7) * 16) % 129) + 1;
        endBit = (startBit + 15) % 129;
        cout << i << " startBit: " << startBit << endl << " endBit: " << endBit << endl;
        cout <<" subkey1: " << ((startBit - 1) >> 4) + 1 << " subkey2: " <<((endBit - 1) >> 4) + 1 << endl << endl;
    }*/

    string str,str2;
    unsigned short int key[8],t;
    unsigned long a1,a2,a3,a4;
    int i,end,j;
    char *tmp = new char[4];

    a1 = 4050550955;
    a2 = 1605609391;
    a3 = 4072650953;
    a4 = 2152509687;

    /*showBits(a1, &str);
    showBits(a2, &str);
    showBits(a3, &str);
    showBits(a4, &str);

    end = str.length();
    for(i = 0; i < end; ++i)
    {
        itoa(i+1,tmp,10);
        str2.append(tmp);
        str2.append(": ");
        str2.append(1,str.at(i));
        str2.append(1,'\n');
    }*/

    /*str.clear(); showBits(a1, &str); cout << str << endl;
    str.clear(); showBits(a2, &str); cout << str << endl;
    str.clear(); showBits(a3, &str); cout << str << endl;
    str.clear(); showBits(a4, &str); cout << str << endl << endl;*/

    key[0] = a1 >> 16;
    key[1] = a1 & 0xFFFF;
    key[2] = a2 >> 16;
    key[3] = a2 & 0xFFFF;
    key[4] = a3 >> 16;
    key[5] = a3 & 0xFFFF;
    key[6] = a4 >> 16;
    key[7] = a4 & 0xFFFF;

    /*str.clear(); showBits(key[0], &str); cout << str << endl;
    str.clear(); showBits(key[1], &str); cout << str << endl;
    str.clear(); showBits(key[2], &str); cout << str << endl;
    str.clear(); showBits(key[3], &str); cout << str << endl;
    str.clear(); showBits(key[4], &str); cout << str << endl;
    str.clear(); showBits(key[5], &str); cout << str << endl;
    str.clear(); showBits(key[6], &str); cout << str << endl;
    str.clear(); showBits(key[7], &str); cout << str << endl;*/

    /*QFile txtFile;
    txtFile.setFileName("2.txt");
    txtFile.open(QIODevice::WriteOnly | QIODevice::Text);
    //txtFile.write(str2.c_str());
    //txtFile.close();

    for(i = 1; i < 53; ++i)
    {
        t = getSubKey(key,i);
        itoa(i,tmp,10);
        str.clear();
        showBits(t, &str);
        txtFile.write(tmp);
        txtFile.write(": ");
        txtFile.write(str.c_str());
        str.clear();
        str.append(1,'\n');
        txtFile.write(str.c_str());
    }

    txtFile.close();*/

    /*for(i = 1; i < 53; ++i)
    {
        t = getSubKey(key,i);
        //str.clear();
        //showBits(t, &str);
        //cout << str << endl;
    }*/


    delete tmp;

    //_getch();








unsigned short int getSubKey(unsigned short int *key, int number)
{
    //int Lshift = 25, keySize = 16, keyLenght = 128, numKeys = 8;
    int startBit, endBit, subKey1, subKey2;
    unsigned short int res1,res2,res;

    /*char *tmp = new char[4];
    string str1,str2,str,str3,key1,key2,str11,str22;
    QFile txtFile;
    txtFile.setFileName("3.txt");
    txtFile.open(QIODevice::Append | QIODevice::Text);*/


////////
    startBit = ((((number - 1) >> 3) * 25 + ((number - 1) & 7) * 16) % 129) + 1;
    endBit = (startBit + 15) % 129;
///////

    /*itoa(number,tmp,10);
    str3.append("-------- ");  str3.append(tmp); str3.append(" --------"); str3.append(1,'\n');

    itoa(startBit,tmp,10);
    str3.append("startBit1: "); str3.append(tmp); str3.append(1,'\n');

    itoa(endBit,tmp,10);
    str3.append("endBit1: "); str3.append(tmp); str3.append(1,'\n');*/

/////////
    subKey1 = ((startBit - 1) >> 4);
    subKey2 = ((endBit - 1) >> 4);
////////

    /*itoa(subKey1,tmp,10);
    str3.append("subKey1: "); str3.append(tmp); str3.append(1,'\n');

    itoa(subKey2,tmp,10);
    str3.append("subKey2: "); str3.append(tmp); str3.append(1,'\n');*/

////////
    startBit = startBit & 15;
////////

    /*itoa(startBit,tmp,10);
    str3.append("startBit2: "); str3.append(tmp); str3.append(1,'\n');

    itoa(endBit,tmp,10);
    str3.append("endBit2: "); str3.append(tmp); str3.append(1,'\n');*/

/////////
    res1 = (clearHighBits(key[subKey1],startBit - 1) << (startBit - 1));
    res2 = (clearLowBits(key[subKey2],17 - startBit) >> (17 - startBit));
    //res11 = res1 << (startBit - 1);
    //res22 = res2 >> (17 - startBit);
    //res = res11 | res22;
    res = res1 | res2;

////////

    /*key1.append("key[subKey1]: ");
    key2.append("key[subKey2]: ");
    str1.append("res1        : ");
    str2.append("res2        : ");
    str11.append("res11       : ");
    str22.append("res22       : ");
    str.append("res         : ");

    showBits(key[subKey1], &key1);
    showBits(key[subKey2], &key2);
    showBits(res1, &str1);
    showBits(res2, &str2);
    showBits(res11, &str11);
    showBits(res22, &str22);
    showBits(res, &str);*/

    /*cout << "res1: " << str1 << endl;
    cout << "res2: " << str2 << endl;
    cout << "res : " << str << endl << endl;*/

    /*str3.append(key1);  str3.append(1,'\n');
    str3.append(key2);  str3.append(1,'\n');
    str3.append(str1);  str3.append(1,'\n');
    str3.append(str2);  str3.append(1,'\n');
    str3.append(str11);  str3.append(1,'\n');
    str3.append(str22);  str3.append(1,'\n');
    str3.append(str);  str3.append(2,'\n');

    txtFile.write(str3.c_str());

    txtFile.close();
    delete tmp;*/
    return res;
}